/*
 *     Copyright 2018 Jonathan Merritt 11R00TT00R11@GMAIL.COM
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */

buildscript {
  /* DEVELOPER */
  def dev = [:]
  dev.name = 'jonathanmerritt'
  dev.email = '11r00tt00r11@gmail.com'

  // properties
  def local = new Properties()
  local.load(file('local.properties').newDataInputStream())

  // passwords
  def pass = [:]
  pass.bintray = local.getProperty('pass.bintray')
  pass.gpg = local.getProperty('pass.gpg')
  pass.maven = local.getProperty('pass.maven')
  dev.pass = pass
  ext.dev = dev

  /* REPOSITORY */
  def rep = [:]
  rep.name = rootProject.name
  rep.id = "com.github.${dev.name}.${rep.name.toLowerCase()}"
  rep.labels = ['android', 'android-library', 'asset', 'assets', 'assetmanager', 'assetsmanager', 'android-asset',
                'android-assets', 'android-asset-manager', 'android-assets-manager']
  rep.licenses = ['Apache-2.0']
  ext.rep = rep

  /* SDKS */
  def sdk = [:]
  sdk.compile = 27
  sdk.min = 17
  sdk.tools = '27.0.3'
  ext.sdk = sdk

  /* DEPENDENCIES */
  def dep = [:]
  dep.tests = ['junit:junit:4.12', 'org.mockito:mockito-core:2.10.0', 'org.assertj:assertj-core:3.8.0',
               'com.nhaarman:mockito-kotlin-kt1.1:1.5.0']
  dep.mockitoKotlin = 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'

  // groups
  def grp = [:]
  grp.support = 'com.android.support'
  grp.constraint = "${grp.support}.constraint"
  grp.test = "${grp.support}.test"
  grp.kotlin = 'org.jetbrains.kotlin'
  grp.rxjava2 = 'io.reactivex.rxjava2'
  ext.grp = grp

  // modules
  def mod = [:]
  mod.layout = 'constraint-layout'
  mod.annots = 'support-annotations'
  mod.reflect = 'kotlin-reflect'
  ext.mod = mod

  // versions
  def ver = [:]
  ver.support = '27.1.0'
  ver.constraint = '1.1.0'
  ver.kotlin = '1.2.40'

  // android support
  def support = [:]
  support.appcompat = "$grp.support:appcompat-v7:$ver.support"
  support.constraint = ["$grp.constraint:$mod.layout:$ver.constraint",
                        "$grp.constraint:$mod.layout-solver:$ver.constraint"]
  support.tests = ["$grp.test:runner:1.0.1", "$grp.test:rules:1.0.1", "$grp.support:$mod.annots:$ver.support"]
  support.espresso = "${grp.test}.espresso:espresso-core:3.0.1"
  dep.support = support

  // jetbrains kotlin
  def kotlin = [:]
  kotlin.gradle = "$grp.kotlin:kotlin-gradle-plugin:$ver.kotlin"
  kotlin.stdlib = "$grp.kotlin:kotlin-stdlib:$ver.kotlin"
  kotlin.tests = "$grp.kotlin:kotlin-test-junit:$ver.kotlin"
  dep.kotlin = kotlin

  // reactivex rxjava2
  dep.rxjava2 = ["$grp.rxjava2:rxjava:2.1.7", "$grp.rxjava2:rxandroid:2.0.1", "$grp.rxjava2:rxkotlin:2.2.0"]
  ext.dep = dep


  repositories {
    google()
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.0-alpha12'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    classpath dep.kotlin.gradle
    classpath 'org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.16'
  }
}

subprojects {
  repositories {
    google()
    jcenter()
    mavenCentral()
  }

  beforeEvaluate {
    /* LIBRARY */
    def lib = [:]
    lib.name = name
    lib.desc = "${rep.name}s' $lib.name library"
    ext.lib = lib

    /* VERSION */
    def ver = [:]
    ver.name = lib.name.contains('app') ? '1.0.0' : '0.6.0'
    ver.code = ver.name.replace('.', '').concat(new Date().format('MMddyy')).toBigInteger()
    ext.ver = ver
  }
}

task clean(type : Delete) {
  delete rootProject.buildDir
}
